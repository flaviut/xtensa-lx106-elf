# Maintainer: Flaviu Tamas <me@flaviutamas.com>
# Maintainer: Anatol Pomozov <anatol.pomozov@gmail.com>

_target=xtensa-lx106-elf
pkgname=$_target-newlib
pkgver=2.0.0
pkgrel=1
_upstream_ver=$pkgver
pkgdesc='A C standard library implementation intended for use on embedded systems (ARM bare metal)'
arch=(any)
url='http://www.sourceware.org/newlib/'
license=(BSD)
makedepends=() #$_target-gcc)
options=(!emptydirs !strip)
source=(
    "https://sourceware.org/pub/newlib/newlib-$pkgver.tar.gz"
    "https://github.com/jcmvbkbc/crosstool-NG/raw/a43bb699167064de70419b1143c8d1d8d627116b/overlays/xtensa_lx106.tar"
    "0001-xtensa-add-port.patch"
    "0002-xtensa-cleanups.patch"
    "0003-xtensa-enable-sqrt.patch")
sha256sums=('49c29e9129325e7c3b221aa829743ddcd796d024440e47c80fc0d6769af72d8a'
            '5c313a32ab7b437396c7e478a45966f9e66c11a022abe1ced4134327287cec98'
            'd7fd0df736261d26d3e0e3b640797b00c5d992b206de812c74d1710b812ea644'
            'e64de9f118d28d1ef274bfcd0924e532a4303d7bb915d9d127dc985d060ae827'
            '1b0cba363cd15b2b9a81fd909ce86dfb4fb0c49be80df4841ae83581ff75c7a0')

prepare() {
  # crosstool-NG patches
  for patch in *.patch; do
    patch -p 1 -d newlib-$_upstream_ver < "$patch"
  done
}

build() {
  rm -rf build-{newlib,nano}
  mkdir -p build-{newlib,nano}

  export CFLAGS_FOR_TARGET='-g -O2 -mlongcalls -DMALLOC_PROVIDED'
  cd "$srcdir"/build-newlib
  ../newlib-$_upstream_ver/configure \
    --target=$_target \
    --prefix=/usr \
    --disable-nls \
    --disable-newlib-io-c99-formats \
    --disable-newlib-io-long-long \
    --disable-newlib-io-float \
    --disable-newlib-io-long-double \
    --disable-newlib-supplied-syscalls \
    --enable-target-optspace
  make

  export CFLAGS_FOR_TARGET='-g -Os -mlongcalls -DMALLOC_PROVIDED'
  cd "$srcdir"/build-nano
  ../newlib-$_upstream_ver/configure \
    --target=$_target \
    --prefix=/usr \
    --disable-nls \
    --disable-newlib-io-c99-formats \
    --disable-newlib-io-long-long \
    --disable-newlib-io-float \
    --disable-newlib-io-long-double \
    --disable-newlib-supplied-syscalls \
    --enable-target-optspace \
    --enable-newlib-reent-small \
    --disable-newlib-fvwrite-in-streamio \
    --disable-newlib-fseek-optimization \
    --disable-newlib-wide-orient \
    --enable-newlib-nano-malloc \
    --disable-newlib-unbuf-stream-opt \
    --enable-lite-exit \
    --enable-newlib-global-atexit \
    --enable-newlib-nano-formatted-io
  make
}

package() {
  cd "$srcdir"/build-nano
  make DESTDIR="$pkgdir" install -j1
  find "$pkgdir" -regex ".*/lib\(c\|g\|rdimon\)\.a" -exec rename .a _nano.a '{}' \;
  install -d "$pkgdir"/usr/$_target/include/newlib-nano
  install -m644 -t "$pkgdir"/usr/$_target/include/newlib-nano "$pkgdir"/usr/$_target/include/newlib.h

  cd "$srcdir"/build-newlib
  make DESTDIR="$pkgdir" install -j1

  find "$pkgdir"/usr/$_target/lib \( -name "*.a" -or -name "*.o" \) -exec $_target-objcopy -R .comment -R .note -R .debug_info -R .debug_aranges -R .debug_pubnames -R .debug_pubtypes -R .debug_abbrev -R .debug_line -R .debug_str -R .debug_ranges -R .debug_loc '{}' \;

  install -d "$pkgdir"/usr/share/licenses/$pkgname/
  install -m644 -t "$pkgdir"/usr/share/licenses/$pkgname/ "$srcdir"/newlib-$_upstream_ver/COPYING*
}
